buffer = _{ SOI ~ token_tree ~ EOI }

// TODO should be thing_or_tree
token_tree = _{ (tree_or_thing)* }

tree_or_thing = _{ tree | thing }

tree = _{ (paren_tree | brace_tree | square_tree | angle_tree ) }
paren_tree = { "(" ~ token_tree ~ ")" }
brace_tree = { "{" ~ token_tree ~ "}" }
square_tree = { "[" ~ token_tree ~ "]" }
angle_tree = { "<" ~ token_tree ~ ">" }

thing = _{ ident | number | punctuation }
ident = @{ ident_leader ~ ident_remainder* }

ident_leader = _{ ASCII_ALPHA | "_" }
ident_remainder = _{ ASCII_ALPHANUMERIC | "_" }

number = _{ float | uint }

float = @{ float_span }

uint = @{ digit_span }

float_span = _{ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+) }
digit_span = _{ ASCII_DIGIT+ }

punctuation = {

  "->"
| "<-"
| "=>"
| "<="

| "..="
| "..."
| ".."
| "."

| ":="
| "::"
| ":"

| ";"
| punct_comma

| "||"
| "|"
| "&&"
| "&"

| "+"
| "-"
| "/"
| "*"

| "+="
| "-="
| "/="
| "*="

| "=="
| "="

| "`"
| "@"
| "#"
| "$"
| "%"
| "^"
| "~"
| "!"
| "?"
| "\\"

}

punct_comma = { "," }

WHITESPACE = _{ " " | "\n" | "\r\n" }