buffer = _{ SOI ~ token_tree ~ EOI }

// TODO should be thing_or_tree
token_tree = _{ (tree_or_thing)* }

tree_or_thing = _{ tree | thing }

tree = _{ (paren_tree | brace_tree | square_tree | angle_tree ) }
paren_tree = { "(" ~ token_tree ~ ")" }
brace_tree = { "{" ~ token_tree ~ "}" }
square_tree = { "[" ~ token_tree ~ "]" }
angle_tree = { "<" ~ token_tree ~ ">" }

thing = _{ ident | number | punctuation }
ident = @{ ident_leader ~ ident_remainder* }

ident_leader = _{ ASCII_ALPHA | "_" }
ident_remainder = _{ ASCII_ALPHANUMERIC | "_" }

number = _{ float | uint }

float = @{ float_span }

uint = @{ digit_span }

float_span = _{ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+) }
digit_span = _{ ASCII_DIGIT+ }

punctuation = {

  punct_right_arrow
| punct_left_arrow
| punct_fat_right_arrow
| punct_fat_left_arrow

| punct_dot_dot_equals
| punct_dot_dot_dot
| punct_dot_dot
| punct_dot

| punct_colon_equals
| punct_colon_colon
| punct_colon

| punct_semicolon
| punct_comma

| punct_bar_bar
| punct_bar
| punct_and_and
| punct_and

| "+"
| "-"
| "/"
| "*"

| "+="
| "-="
| "/="
| "*="

| "=="
| "="

| "`"
| "@"
| "#"
| "$"
| "%"
| "^"
| "~"
| "!"
| "?"
| "\\"

}

punct_right_arrow = { "->" }
punct_left_arrow = { "<-" }
punct_fat_right_arrow = { "=>" }
punct_fat_left_arrow = { "<=" }

punct_dot_dot_equals = { "..=" }
punct_dot_dot_dot = { "..." }
punct_dot_dot = { ".." }
punct_dot = { "." }

punct_colon_equals = { ":=" }
punct_colon_colon = { "::" }
punct_colon = { ":" }

punct_semicolon = { ";" }
punct_comma = { "," }

punct_bar_bar = { "||" }
punct_bar = { "|" }
punct_and_and = { "&&" }
punct_and = { "&" }

WHITESPACE = _{ " " | "\n" | "\r\n" }