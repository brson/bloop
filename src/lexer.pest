module = { SOI ~ (tree_or_thing)* ~ EOI }

tree_or_thing = _{ tree | thing }

tree = { (paren_tree | brace_tree | square_tree | angle_tree ) }
paren_tree = { "(" ~ (tree_or_thing)* ~ ")" }
brace_tree = { "{" ~ (tree_or_thing)* ~ "}" }
square_tree = { "[" ~ (tree_or_thing)* ~ "]" }
angle_tree = { "<" ~ (tree_or_thing)* ~ ">" }

thing = { ident | number | punctuation }
ident = @{ ident_leader ~ ident_remainder* }

ident_leader = { ASCII_ALPHA | "_" }
ident_remainder = { ASCII_ALPHANUMERIC | "_" }

number = { float | int }

float = _{ float_64 }
float_64 = @{ float_span }

int = _{ int_u32_base10 }
int_u32_base10 = @{ digit_span }

float_span = _{ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+) }
digit_span = _{ ASCII_DIGIT+ }

punctuation = { "..." | ".." | "." |
			    "!" | "::" | ":" | ";" |
                "|" | "+" | "-" | "/" | "*" |
				"#" | "~" | "`" | "$" |
				"==" | "=" | "," | "@" | "?" }

WHITESPACE = _{ " " | "\n" | "\r\n" }